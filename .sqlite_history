SELECT * FROM posts;
SELECT * FROM posts;
SELECT * FROM db;
db.py
SELECT * FROM db;
SELECT * FROM posts;
SELECT * FROM schema;
SELECT * FROM posts;
.read schema.sql
SELECT * FROM posts;
SELECT *
SELECT *;
SELECT * FROM posts;
SELECT * FROM posts;
.read schema.sql
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 1', 'Content of Post 1');
INSERT INTO posts (title, content) VALUES ('Post 2', 'Content of Post 2');
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
COMMIT;
SELECT * FROM posts;
.tables
SELECT * FROM posts;
.read schema.sql
SELECT * FROM posts;
.read schema.sql
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 1', 'Content of Post 1');
INSERT INTO posts (title, content) VALUES ('Post 2', 'Content of Post 2');
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
schema.sql
schema.sql;
SELECT * FROM posts;
SELECT * FROM posts;
.open schema.sql
SELECT * FROM posts;
SELECT database.db;
cd templates
SELECT * FROM posts;
.read schema.sql
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
commit();
SELECT * FROM posts;
SELECT * FROM posts;
SELECT * FROM posts;
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
COMMIT;
BEGIN:
BEGIN;
BEGIN;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
COMMIT;
SELECT * FROM posts;
SELECT * FROM posts;
sqlite3 mydatabase.db
CREATE TABLE IF NOT EXISTS posts (
    id INTEGER PRIMARY KEY,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    title TEXT,
    content TEXT
);
.open schema.sql
SELECT * FROM posts;
.open schema.sql
SELECT * FROM posts;
.open schema.sql
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
.open database.db
.read schema.sql
SELECT * FROM posts;
COMMIT;
.open database.db
.read schema.sql
DROP TABLE IF EXISTS posts;
CREATE TABLE posts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    title TEXT,
    content TEXT
);
SELECT * F
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
SELECT * FROM posts;
BEGIN;
.open database.db
.read schema.sql
SELECT * FROM posts;
COMMIT;
.open database.db
.read schema.sql
SELECT * FROM posts;
.open database.db
.read schema.sql
SELECT * FROM posts;
.open database.db
.read schema.sql
SELECT * FROM posts;
.open database.db
DROP TABLE IF EXISTS posts;
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
.read schema.sql
DROP TABLE IF EXISTS posts;
CREATE TABLE IF NOT EXISTS posts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    title TEXT NOT NULL,
    content TEXT NOT NULL
);
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
COMMIT();
COMMIT;
.open database.db
.tables
.open database.db
.read schema.sql
SELECT * FROM posts;
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
.open database.db
.read schema.sql
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
SELECT * FROM posts;
.open database.db
.read schema.sql
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
SELECT * FROM posts;
SELECT * FROM posts;
SELECT * FROM posts;
.open database.db
SELECT * FROM posts;
.open database.db
.read schema.sql
SELECT * FROM posts;
INSERT INTO posts (title, content) VALUES ('Post 3', 'Content of Post 3');
SELECT * FROM posts;
.open database.db
SELECT * FROM posts;
.open database.db
SELECT * FROM posts;
.open database.db
SELECT * FROM posts;
.open database.db
SELECT * FROM posts;
